There is certain amount of search and filtering plugins out there, so why we've implemented new one? I would like to list the reasons which we understand as the most important advantages of this plugin, however keep in mind, that different plugins are usually suitable for different situations.

* *Search setting should not be specified in domain classes* - In my opinion, specifying the search options (properties which should be searched, the ordering parameters, etc.) should not be specified in domain classes (as most of the search plugin does). The domain class represents the model and the search is more view related, therefore it should be specified closer to the view level, i.e. in the controller.
* *Different search settings for different situations* - In additional to above, the search could vary for same domain class list in different situations. The search engine should allow to set different search options though.
* *Let the programmer allow to influence the search* - Sometimes the search should be constrained by programmer's specific code. Therefore, we allow to put a custom [create criteria|http://grails.org/doc/latest/ref/Domain%20Classes/createCriteria.html] closure to the search query.
